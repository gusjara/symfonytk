imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: config_easy_admin.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Blox\TicketBundle\Entity\User

    from_email:
        address: mail@email.com
        sender_name: Tickets
        #address: "%mailer_user%"
        #sender_name: "%mailer_user%"

parameters:
    locale: es

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    ##SE AGREGEGA PARA USAR EL TEMPLATING DE FOSUSERBUNDLE
    templating:
        engines: ['twig']
    
    #SERIELIZE NECESARIO PARA LA API REST (sin bundle: JMSSerializerBundle)
    #serializer:
    #    enabled: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Nelmio CORS Configuration
nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ['*']
        allow_headers: ['*']
        allow_methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
        max_age: 3600
        hosts: []
        origin_regex: false


#Devolver datos tipo json en la api rest: https://symfony.com/doc/master/bundles/FOSRestBundle/3-listener-support.html
fos_rest:  
    view:
        view_response_listener: 'force'
        formats: 
            json: true
        
    format_listener:
        rules: 
            - { path: '^/api', priorities: ['json'], fallback_format: 'json', prefer_extension: true }
            - { path: '^/oauth/v2/token', priorities: ['json'], fallback_format: 'json', prefer_extension: true }
            - { path: ^/admin, priorities: [ html ], fallback_format: html, prefer_extension: true }
            - { path: ^/login, priorities: [ html ], fallback_format: html, prefer_extension: true }
            - { path: ^/logout, priorities: [ html ], fallback_format: html, prefer_extension: true }
            - { path: ^/, priorities: [ html ], fallback_format: html, prefer_extension: true }

fos_oauth_server:
    db_driver:           orm
    client_class:        Blox\TicketBundle\Entity\Client
    access_token_class:  Blox\TicketBundle\Entity\AccessToken
    refresh_token_class: Blox\TicketBundle\Entity\RefreshToken
    auth_code_class:     Blox\TicketBundle\Entity\AuthCode
    service:
       #user_provider: fos_user.user_manager             # This property will be used when valid credentials are given to load the user upon access token creation
       #the previus user_provider was decraped since long time
       user_provider: fos_user.user_provider.username