<?php

namespace Blox\TicketBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Ticket
 *
 * @ORM\Entity(repositoryClass="Blox\TicketBundle\Repository\TicketRepository")
 * @ORM\Table(name="ticket")
 * @ORM\HasLifecycleCallbacks
 */
class Ticket
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\ManyToOne(targetEntity="Tipo", inversedBy="tickets")
     * @ORM\JoinColumn(name="tipo_id", referencedColumnName="id", nullable=false)
     */
    private $tipo;

    /**
     * @ORM\ManyToOne(targetEntity="Categoria", inversedBy="tickets")
     * @ORM\JoinColumn(name="categoria_id", referencedColumnName="id", nullable=false)
     */
    private $categoria;

    /**
     *
     * @ORM\ManyToOne(targetEntity="Nivel", inversedBy="tickets")
     * @ORM\JoinColumn(name="nivel_id", referencedColumnName="id", nullable=false)
     */
    private $nivel;

    /**
     * @ORM\ManyToOne(targetEntity="Estado", inversedBy="tickets")
     * @ORM\JoinColumn(name="estado_id", referencedColumnName="id", nullable=false)
     */
    private $estado;

    /**
     * @ORM\ManyToOne(targetEntity="Empresa", inversedBy="tickets")
     * @ORM\JoinColumn(name="empresa_id", referencedColumnName="id", nullable=false)
     */
    private $empresa;

    /**
     * @ORM\ManyToOne(targetEntity="User")
     * @ORM\JoinColumn(name="user_id_create", referencedColumnName="id", nullable=true)
     */
    private $userIdCreate;

    /**
     * @ORM\ManyToOne(targetEntity="User")
     * @ORM\JoinColumn(name="user_id_close", referencedColumnName="id", nullable=true)
     */
    private $userIdClose;

    //Creo este nuevo campo para guardar los usuario que ven los tickets. 
    //al hacer click en el boton ver se va guardar el nombre del usuario que vio.
    /**
     * @var string
     *
     * @ORM\Column(name="users_view", type="string", nullable=true)
     */
    private $usersView;

    /**
     * @var string
     *
     * @ORM\Column(name="descripcion", type="text")
     */
    private $descripcion;

    /**
     * @var string
     *
     * @ORM\Column(name="respuesta", type="text", nullable=true)
     */
    private $respuesta;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="update_at", type="datetime", nullable=false)
     */
    private $updateAt;


    /**
     *
     * @ORM\PreUpdate()
     * @ORM\PrePersist()
     */
    public function setTimeClose() {
        $this->setUpdateAt = (new \DateTime());
    }

    //funcion convert to string
    public function __toString(){
        return (string) $this->ticket;
    }


}
